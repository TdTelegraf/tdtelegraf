name: Release
on:
  push:
    branches:
      - master
    paths-ignore:
      - '**.md'
  pull_request:
    branches:
      - master
    paths-ignore:
      - '**.md'


env:
  NODE_VERSION: 20.5.1
  PNPM_VERSION: 8.7.5
  PACKAGE_VERSION: 123123

jobs:
  prepare:
    if: contains(github.event.head_commit.message , 'chore(release)') == false
    runs-on: ubuntu-22.04
    permissions:
      contents: write
      packages: write
      pull-requests: write
    steps:
      - name: GIT â€“ Checkout
        uses: actions/checkout@v4
      # - name: PNPM â€“ Install
      #   uses: lskjs/action-pnpm@v1
      #   with:
      #     node-version: ${{ env.NODE_VERSION }}
      #     pnpm-version: ${{ env.PNPM_VERSION }}
      - name: PNPM â€“ Install deps
        run: |
          echo `date` > test.txt
      - name: Commit version and tag to git
        uses: EndBug/add-and-commit@v9
        with:
          # add: 'package.json pnpm-lock.yaml'
          add: 'test.txt'
          # author_name: Igor Suvorov Bot
          # author_email: bot@isuvorov.com
          # default_author: github_actor
          message: 'chore(release): ðŸŽ‰ v${{ env.PACKAGE_VERSION }}'
          tag: 'v${{ env.PACKAGE_VERSION }} --force'
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
  
  # build:
  #   needs: [prepare]
  #   runs-on: ubuntu-22.04
  #   steps:
  #     - name: GIT â€“ Checkout
  #       uses: actions/checkout@v4
  #     - name: PNPM â€“ release
  #       uses: lskjs/action-pnpm@v1
  #       with:
  #         node-version: ${{ env.NODE_VERSION }}
  #         pnpm-version: ${{ env.PNPM_VERSION }}
  #         command: |
  #           pnpm config set '//registry.npmjs.org/:_authToken' "${NPM_TOKEN}" && \
  #           npm i -g lsk@3.16.4 @lskjs/cli-scripts@3.16.4 && \
  #           git config --global user.email "bot@isuvorov.com" && \
  #           git config --global user.name "Igor Suvorov Bot" && \
  #           STAGE=ci lsk run release --yes
  #       env:
  #         NPM_TOKEN: ${{secrets.NPM_TOKEN}}
  #     - name: NPM - get new version
  #       run: echo PACKAGE_VERSION=$(node -p "require('./lerna.json').version") >> $GITHUB_ENV
  #     - name: Commit version and tag to git
  #       uses: EndBug/add-and-commit@v9
  #       with:
  #         add: 'package.json'
  #         author_name: Igor Suvorov Bot
  #         author_email: bot@isuvorov.com
  #         default_author: github_actor
  #         message: 'chore(release): ðŸŽ‰ v${{ env.PACKAGE_VERSION }}'
  #         tag: 'v${{ env.PACKAGE_VERSION }} --force'
